Welcome to the CBC MILP Solver 
Version: devel 
Build Date: Sep 21 2020 

command line - ./cbc input/neos-957323.mps.gz sec 360 MaxN 0 solve (default strategy 1)
At line 1 NAME          neos-957323
At line 2 ROWS
At line 3761 COLUMNS
At line 560996 RHS
At line 562520 BOUNDS
At line 620277 ENDATA
Problem neos-957323 has 3757 rows, 57756 columns and 499656 elements
Coin0008I neos-957323 read with 0 errors
seconds was changed from 1e+100 to 360
maxNodes was changed from 2147483647 to 0
Continuous objective value is -237.758 - 11.57 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 45 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 9 strengthened rows, 0 substitutions
Cgl0004I processed model has 3078 rows, 57666 columns (57666 integer (57666 of which binary)) and 391115 elements
Coin3009W Conflict graph built in 39.943 seconds, density: 0.189%
Cgl0015I Clique Strengthening extended 298 cliques, 477 were dominated
After applying Clique Strengthening continuous objective value is -237.76
Cbc0038I Initial state - 172 integers unsatisfied sum - 55.5625
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. -217.787 iterations 2230
Cbc0038I Solution found of -217.787
Cbc0038I Rounding solution of -232.76 is better than previous of -217.787

Cbc0038I Before mini branch and bound, 57493 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2899 rows 57666 columns, reduced to 353 rows 166 columns
Cbc0038I Mini branch and bound did not improve solution (74.36 seconds)
Cbc0038I Round again with cutoff of -233.26
Cbc0038I Pass   2: suminf.    1.00459 (4) obj. -233.26 iterations 757
Cbc0038I Solution found of -233.762
Cbc0038I Rounding solution of -234.759 is better than previous of -233.762

Cbc0038I Before mini branch and bound, 57478 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2899 rows 57666 columns, reduced to 363 rows 181 columns
Cbc0038I Mini branch and bound did not improve solution (77.88 seconds)
Cbc0038I Round again with cutoff of -235.359
Cbc0038I Pass   3: suminf.    0.39962 (1) obj. -235.359 iterations 42
Cbc0038I Solution found of -235.757
Cbc0038I Before mini branch and bound, 57477 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2899 rows 57666 columns, reduced to 364 rows 182 columns
Cbc0038I Mini branch and bound improved solution from -235.757 to -235.761 (80.96 seconds)
Cbc0038I Round again with cutoff of -236.36
Cbc0038I Pass   4: suminf.    1.20752 (6) obj. -236.36 iterations 215
Cbc0038I Pass   5: suminf.    0.80501 (4) obj. -236.36 iterations 151
Cbc0038I Pass   6: suminf.    0.00000 (0) obj. -237.753 iterations 1409
Cbc0038I Solution found of -237.753
Cbc0038I Before mini branch and bound, 57472 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2899 rows 57666 columns, reduced to 368 rows 186 columns
Cbc0038I Mini branch and bound improved solution from -237.753 to -237.757 (87.04 seconds)
Cbc0038I Round again with cutoff of -237.757
Cbc0038I Reduced cost fixing fixed 263 variables on major pass 5
Cbc0038I Pass   7: suminf.   13.24637 (55) obj. -237.757 iterations 3049
Cbc0038I Pass   8: suminf.    5.93517 (24) obj. -237.757 iterations 858
Cbc0038I Pass   9: suminf.    5.13815 (24) obj. -237.757 iterations 218
Cbc0038I Pass  10: suminf.    5.00000 (21) obj. -237.757 iterations 3390
Cbc0038I Pass  11: suminf.    4.46631 (22) obj. -237.757 iterations 1630
Cbc0038I Pass  12: suminf.    5.41620 (20) obj. -237.757 iterations 1617
Cbc0038I Pass  13: suminf.    4.77564 (22) obj. -237.757 iterations 803
Cbc0038I Pass  14: suminf.    5.07558 (20) obj. -237.757 iterations 1521
Cbc0038I Pass  15: suminf.    4.83928 (23) obj. -237.757 iterations 922
Cbc0038I Pass  16: suminf.    4.82000 (21) obj. -237.757 iterations 1400
Cbc0038I Pass  17: suminf.    4.77564 (22) obj. -237.757 iterations 906
Cbc0038I Pass  18: suminf.    4.84483 (22) obj. -237.757 iterations 1649
Cbc0038I Pass  19: suminf.   39.82294 (204) obj. -237.757 iterations 2380
Cbc0038I Pass  20: suminf.   10.39112 (43) obj. -237.757 iterations 2881
Cbc0038I Pass  21: suminf.    6.08826 (22) obj. -237.757 iterations 776
Cbc0038I Pass  22: suminf.    6.03136 (29) obj. -237.757 iterations 245
Cbc0038I Pass  23: suminf.    5.33333 (17) obj. -237.757 iterations 2216
Cbc0038I Pass  24: suminf.    4.62710 (23) obj. -237.757 iterations 1510
Cbc0038I Pass  25: suminf.    5.00000 (16) obj. -237.757 iterations 3661
Cbc0038I Pass  26: suminf.    4.82058 (22) obj. -237.757 iterations 922
Cbc0038I Pass  27: suminf.    5.99959 (13) obj. -237.757 iterations 2559
Cbc0038I Pass  28: suminf.    4.56419 (95) obj. -237.757 iterations 2601
Cbc0038I Pass  29: suminf.    4.42572 (23) obj. -237.757 iterations 315
Cbc0038I Pass  30: suminf.    6.82786 (17) obj. -237.757 iterations 1561
Cbc0038I Pass  31: suminf.    4.81931 (23) obj. -237.757 iterations 837
Cbc0038I Pass  32: suminf.    4.91477 (22) obj. -237.757 iterations 2690
Cbc0038I Pass  33: suminf.    4.91279 (24) obj. -237.757 iterations 855
Cbc0038I Pass  34: suminf.    5.25003 (21) obj. -237.757 iterations 2395
Cbc0038I Pass  35: suminf.    4.42572 (22) obj. -237.757 iterations 1311
Cbc0038I Pass  36: suminf.    5.43418 (19) obj. -237.757 iterations 1683
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56342 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2899 rows 57666 columns, reduced to 857 rows 803 columns
Cbc0038I Mini branch and bound improved solution from -237.757 to -237.757 (166.94 seconds)
Cbc0038I Round again with cutoff of -237.757
Cbc0038I Reduced cost fixing fixed 6158 variables on major pass 6
Cbc0038I Pass  36: suminf.   18.96938 (52) obj. -237.757 iterations 290
Cbc0038I Pass  37: suminf.   10.13462 (45) obj. -237.757 iterations 885
Cbc0038I Pass  38: suminf.    8.99680 (47) obj. -237.757 iterations 176
Cbc0038I Pass  39: suminf.    8.97576 (55) obj. -237.757 iterations 317
Cbc0038I Pass  40: suminf.    8.97576 (55) obj. -237.757 iterations 81
Cbc0038I Pass  41: suminf.    8.20300 (46) obj. -237.757 iterations 341
Cbc0038I Pass  42: suminf.    8.18184 (54) obj. -237.757 iterations 154
Cbc0038I Pass  43: suminf.    8.18184 (54) obj. -237.757 iterations 71
Cbc0038I Pass  44: suminf.    8.70513 (41) obj. -237.757 iterations 478
Cbc0038I Pass  45: suminf.    8.47808 (54) obj. -237.757 iterations 291
Cbc0038I Pass  46: suminf.    8.47808 (54) obj. -237.757 iterations 58
Cbc0038I Pass  47: suminf.   10.83340 (41) obj. -237.757 iterations 1272
Cbc0038I Pass  48: suminf.    8.49680 (44) obj. -237.757 iterations 1279
Cbc0038I Pass  49: suminf.   33.05876 (148) obj. -237.757 iterations 1577
Cbc0038I Pass  50: suminf.   11.40065 (54) obj. -237.757 iterations 1434
Cbc0038I Pass  51: suminf.    8.47808 (54) obj. -237.757 iterations 507
Cbc0038I Pass  52: suminf.    8.47808 (54) obj. -237.757 iterations 61
Cbc0038I Pass  53: suminf.   10.00000 (27) obj. -237.757 iterations 765
Cbc0038I Pass  54: suminf.    8.49680 (46) obj. -237.757 iterations 1083
Cbc0038I Pass  55: suminf.   26.00002 (144) obj. -237.757 iterations 1434
Cbc0038I Pass  56: suminf.    9.36112 (55) obj. -237.757 iterations 1714
Cbc0038I Pass  57: suminf.    8.49637 (52) obj. -237.757 iterations 661
Cbc0038I Pass  58: suminf.    8.49517 (50) obj. -237.757 iterations 10
Cbc0038I Pass  59: suminf.    8.24253 (50) obj. -237.757 iterations 349
Cbc0038I Pass  60: suminf.    8.19667 (52) obj. -237.757 iterations 260
Cbc0038I Pass  61: suminf.    8.19667 (52) obj. -237.757 iterations 47
Cbc0038I Pass  62: suminf.    8.24253 (50) obj. -237.757 iterations 351
Cbc0038I Pass  63: suminf.   66.95455 (178) obj. -237.757 iterations 1574
Cbc0038I Pass  64: suminf.   20.33686 (68) obj. -237.757 iterations 2130
Cbc0038I Pass  65: suminf.   10.24039 (47) obj. -237.757 iterations 858
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 56817 integers at bound fixed and 0 continuous
Cbc0038I Full problem 2899 rows 57666 columns, reduced to 931 rows 845 columns
Cbc0038I Mini branch and bound did not improve solution (189.71 seconds)
Cbc0038I After 189.72 seconds - Feasibility pump exiting with objective of -237.757 - took 120.45 seconds
Cbc0012I Integer solution of -237.75668 found by feasibility pump after 0 iterations and 0 nodes (189.75 seconds)
Cbc0038I Full problem 2899 rows 57666 columns, reduced to 397 rows 199 columns
Cbc0031I 7 added rows had average density of 34.285714
Cbc0013I At root node, 7 cuts changed objective from -237.75791 to -237.75784 in 5 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 64 column cuts (64 active)  in 6.728 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 9 row cuts average 161.1 elements, 0 column cuts (0 active)  in 0.636 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.357 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 11 row cuts average 7.2 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 9 row cuts average 5.2 elements, 0 column cuts (0 active)  in 0.237 seconds - new frequency is 1
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.261 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.029 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 6 row cuts average 49.7 elements, 0 column cuts (0 active)  in 1.971 seconds - new frequency is -100
Cbc0014I Cut generator 8 (ZeroHalf) - 1 row cuts average 137.0 elements, 0 column cuts (0 active)  in 0.151 seconds - new frequency is -100
Cbc0003I Exiting on maximum nodes
Cbc0005I Partial search - best objective -237.75668 (best possible -237.75784), took 393 iterations and 0 nodes (206.32 seconds)
Cbc0035I Maximum depth 0, 136 variables fixed on reduced cost
Cuts at root node changed objective from -237.758 to -237.758
Probing was tried 5 times and created 64 cuts of which 0 were active after adding rounds of cuts (6.728 seconds)
Gomory was tried 5 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.636 seconds)
Knapsack was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.357 seconds)
Clique was tried 5 times and created 11 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
OddWheel was tried 5 times and created 9 cuts of which 0 were active after adding rounds of cuts (0.237 seconds)
MixedIntegerRounding2 was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.261 seconds)
FlowCover was tried 5 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.029 seconds)
TwoMirCuts was tried 5 times and created 6 cuts of which 0 were active after adding rounds of cuts (1.971 seconds)
ZeroHalf was tried 1 times and created 1 cuts of which 0 were active after adding rounds of cuts (0.151 seconds)

Result - Stopped on node limit

Objective value:                -237.75668148
Lower bound:                    -237.758
Gap:                            0.00
Enumerated nodes:               0
Total iterations:               393
Time (CPU seconds):             207.26
Time (Wallclock seconds):       210.49

Total time (CPU seconds):       207.60   (Wallclock seconds):       210.83

