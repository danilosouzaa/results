Welcome to the CBC MILP Solver 
Version: devel 
Build Date: Sep 21 2020 

command line - ./cbc input/reblock115.mps.gz sec 360 MaxN 0 solve (default strategy 1)
At line 1 NAME          reblock115
At line 2 ROWS
At line 4739 COLUMNS
At line 19616 RHS
At line 19637 BOUNDS
At line 20788 ENDATA
Problem reblock115 has 4735 rows, 1150 columns and 13724 elements
Coin0008I reblock115 read with 0 errors
seconds was changed from 1e+100 to 360
maxNodes was changed from 2147483647 to 0
Continuous objective value is -3.9366e+07 - 0.30 seconds
Cgl0004I processed model has 4735 rows, 1150 columns (1150 integer (1150 of which binary)) and 13724 elements
Coin3009W Conflict graph built in 0.002 seconds, density: 0.222%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 1026 integers unsatisfied sum - 271.565
Cbc0038I Pass   1: (1.01 seconds) suminf.  167.21197 (475) obj. -3.55505e+07 iterations 1305
Cbc0038I Pass   2: (1.18 seconds) suminf.   41.04407 (147) obj. -1.91356e+07 iterations 403
Cbc0038I Pass   3: (1.22 seconds) suminf.   27.85393 (97) obj. -1.83282e+07 iterations 230
Cbc0038I Pass   4: (1.25 seconds) suminf.   24.03178 (81) obj. -1.90556e+07 iterations 93
Cbc0038I Pass   5: (1.27 seconds) suminf.   23.92321 (80) obj. -1.90516e+07 iterations 10
Cbc0038I Pass   6: (1.30 seconds) suminf.   10.48538 (29) obj. -1.65802e+07 iterations 127
Cbc0038I Pass   7: (1.32 seconds) suminf.    5.59342 (40) obj. -1.81071e+07 iterations 76
Cbc0038I Pass   8: (1.34 seconds) suminf.    5.52540 (22) obj. -1.81205e+07 iterations 9
Cbc0038I Pass   9: (1.36 seconds) suminf.    1.30898 (9) obj. -1.60908e+07 iterations 128
Cbc0038I Pass  10: (1.38 seconds) suminf.    0.42903 (7) obj. -1.60203e+07 iterations 6
Cbc0038I Pass  11: (1.39 seconds) suminf.    0.35717 (2) obj. -1.60076e+07 iterations 43
Cbc0038I Pass  12: (1.41 seconds) suminf.    0.29638 (1) obj. -1.60128e+07 iterations 3
Cbc0038I Pass  13: (1.42 seconds) suminf.    0.45641 (2) obj. -1.60121e+07 iterations 26
Cbc0038I Pass  14: (1.44 seconds) suminf.    0.29978 (1) obj. -1.60217e+07 iterations 15
Cbc0038I Pass  15: (1.47 seconds) suminf.    3.80719 (11) obj. -1.69275e+07 iterations 207
Cbc0038I Pass  16: (1.49 seconds) suminf.    1.04414 (3) obj. -1.68556e+07 iterations 142
Cbc0038I Pass  17: (1.50 seconds) suminf.    0.59843 (2) obj. -1.68237e+07 iterations 1
Cbc0038I Pass  18: (1.52 seconds) suminf.    0.21029 (1) obj. -1.67773e+07 iterations 15
Cbc0038I Pass  19: (1.53 seconds) suminf.    0.36788 (1) obj. -1.67683e+07 iterations 10
Cbc0038I Pass  20: (1.55 seconds) suminf.    0.21002 (1) obj. -1.67818e+07 iterations 1
Cbc0038I Pass  21: (1.58 seconds) suminf.    3.04035 (9) obj. -1.58481e+07 iterations 219
Cbc0038I Pass  22: (1.60 seconds) suminf.    0.43014 (6) obj. -1.5726e+07 iterations 128
Cbc0038I Pass  23: (1.62 seconds) suminf.    0.28512 (3) obj. -1.57152e+07 iterations 4
Cbc0038I Pass  24: (1.63 seconds) suminf.    0.42591 (1) obj. -1.57327e+07 iterations 20
Cbc0038I Pass  25: (1.63 seconds) suminf.    0.42591 (1) obj. -1.57327e+07 iterations 0
Cbc0038I Pass  26: (1.66 seconds) suminf.    0.69590 (5) obj. -1.47327e+07 iterations 176
Cbc0038I Pass  27: (1.68 seconds) suminf.    0.08770 (2) obj. -1.47518e+07 iterations 126
Cbc0038I Solution found of -1.47863e+07
Cbc0038I Rounding solution of -1.70992e+07 is better than previous of -1.47863e+07

Cbc0038I Before mini branch and bound, 70 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4735 rows 1150 columns, reduced to 4433 rows 1080 columns - 111 fixed gives 3024, 784 - still too large
Cbc0038I Full problem 4735 rows 1150 columns, reduced to 3024 rows 784 columns - too large
Cbc0038I Mini branch and bound did not improve solution (2.12 seconds)
Cbc0038I Round again with cutoff of -1.93259e+07
Cbc0038I Pass  28: (2.13 seconds) suminf.  167.21197 (475) obj. -3.55505e+07 iterations 0
Cbc0038I Pass  29: (2.35 seconds) suminf.   42.77763 (281) obj. -1.93259e+07 iterations 597
Cbc0038I Pass  30: (2.46 seconds) suminf.   30.34844 (194) obj. -1.93259e+07 iterations 286
Cbc0038I Pass  31: (2.49 seconds) suminf.   21.68057 (154) obj. -1.93259e+07 iterations 47
Cbc0038I Pass  32: (2.52 seconds) suminf.   16.37299 (150) obj. -1.93259e+07 iterations 77
Cbc0038I Pass  33: (2.56 seconds) suminf.   12.26617 (51) obj. -1.93259e+07 iterations 91
Cbc0038I Pass  34: (2.61 seconds) suminf.   11.84597 (203) obj. -1.93259e+07 iterations 121
Cbc0038I Pass  35: (2.63 seconds) suminf.   11.07641 (203) obj. -1.93259e+07 iterations 21
Cbc0038I Pass  36: (2.67 seconds) suminf.    9.87274 (65) obj. -1.93259e+07 iterations 73
Cbc0038I Pass  37: (2.71 seconds) suminf.    8.28595 (200) obj. -1.93259e+07 iterations 87
Cbc0038I Pass  38: (2.77 seconds) suminf.    8.46770 (57) obj. -1.93259e+07 iterations 171
Cbc0038I Pass  39: (2.83 seconds) suminf.    7.49024 (199) obj. -1.93259e+07 iterations 121
Cbc0038I Pass  40: (2.88 seconds) suminf.    7.51527 (88) obj. -1.93259e+07 iterations 141
Cbc0038I Pass  41: (2.93 seconds) suminf.    6.82208 (199) obj. -1.93259e+07 iterations 134
Cbc0038I Pass  42: (2.98 seconds) suminf.    6.54014 (35) obj. -1.93259e+07 iterations 141
Cbc0038I Pass  43: (3.01 seconds) suminf.    3.22967 (53) obj. -1.93259e+07 iterations 41
Cbc0038I Pass  44: (3.03 seconds) suminf.    2.49597 (26) obj. -1.93259e+07 iterations 67
Cbc0038I Pass  45: (3.09 seconds) suminf.    1.58655 (14) obj. -1.93259e+07 iterations 53
Cbc0038I Pass  46: (3.12 seconds) suminf.    4.32383 (10) obj. -1.93625e+07 iterations 69
Cbc0038I Pass  47: (3.14 seconds) suminf.    1.52050 (8) obj. -1.93259e+07 iterations 60
Cbc0038I Pass  48: (3.17 seconds) suminf.    0.99547 (21) obj. -1.93259e+07 iterations 94
Cbc0038I Pass  49: (3.19 seconds) suminf.    3.52041 (19) obj. -1.93899e+07 iterations 97
Cbc0038I Pass  50: (3.24 seconds) suminf.    3.27503 (14) obj. -1.93582e+07 iterations 9
Cbc0038I Pass  51: (3.26 seconds) suminf.    4.48139 (15) obj. -1.93259e+07 iterations 58
Cbc0038I Pass  52: (3.28 seconds) suminf.    4.21135 (16) obj. -1.93259e+07 iterations 36
Cbc0038I Pass  53: (3.30 seconds) suminf.    1.15063 (6) obj. -1.95078e+07 iterations 47
Cbc0038I Pass  54: (3.30 seconds) suminf.    1.15063 (6) obj. -1.95078e+07 iterations 0
Cbc0038I Pass  55: (3.32 seconds) suminf.    1.64796 (7) obj. -1.93259e+07 iterations 38
Cbc0038I Pass  56: (3.34 seconds) suminf.    1.39363 (8) obj. -1.93259e+07 iterations 40
Cbc0038I Pass  57: (3.36 seconds) suminf.    1.67886 (7) obj. -1.94912e+07 iterations 43
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 78 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4735 rows 1150 columns, reduced to 4422 rows 1072 columns - 129 fixed gives 2878, 748 - still too large
Cbc0038I Full problem 4735 rows 1150 columns, reduced to 2878 rows 748 columns - too large
Cbc0038I Mini branch and bound did not improve solution (3.86 seconds)
Cbc0038I After 3.86 seconds - Feasibility pump exiting with objective of -1.70992e+07 - took 3.31 seconds
Cbc0012I Integer solution of -17099186 found by feasibility pump after 0 iterations and 0 nodes (3.86 seconds)
Cbc0031I 21 added rows had average density of 79.904762
Cbc0013I At root node, 21 cuts changed objective from -39365983 to -38782198 in 4 passes
Cbc0014I Cut generator 0 (Probing) - 31 row cuts average 3.0 elements, 15 column cuts (15 active)  in 0.065 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 12 row cuts average 213.1 elements, 0 column cuts (0 active)  in 0.688 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.098 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.591 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 9.546 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.087 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.002 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 31 row cuts average 213.3 elements, 0 column cuts (0 active)  in 1.194 seconds - new frequency is 1
Cbc0003I Exiting on maximum nodes
Cbc0005I Partial search - best objective -17099186 (best possible -38782198), took 1329 iterations and 0 nodes (20.22 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -3.9366e+07 to -3.87822e+07
Probing was tried 4 times and created 46 cuts of which 0 were active after adding rounds of cuts (0.065 seconds)
Gomory was tried 4 times and created 12 cuts of which 0 were active after adding rounds of cuts (0.688 seconds)
Knapsack was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.098 seconds)
Clique was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.591 seconds)
OddWheel was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (9.546 seconds)
MixedIntegerRounding2 was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.087 seconds)
FlowCover was tried 4 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.002 seconds)
TwoMirCuts was tried 4 times and created 31 cuts of which 0 were active after adding rounds of cuts (1.194 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.393 seconds)

Result - Stopped on node limit

Objective value:                -17099185.68851496
Lower bound:                    -38782198.013
Gap:                            0.56
Enumerated nodes:               0
Total iterations:               1329
Time (CPU seconds):             20.41
Time (Wallclock seconds):       20.44

Total time (CPU seconds):       20.43   (Wallclock seconds):       20.47

