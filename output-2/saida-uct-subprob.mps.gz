Welcome to the CBC MILP Solver 
Version: devel 
Build Date: Sep 21 2020 

command line - ./cbc input/uct-subprob.mps.gz sec 180 solve (default strategy 1)
At line 1 NAME          uct-subprob
At line 2 ROWS
At line 1977 COLUMNS
At line 13472 RHS
At line 15398 BOUNDS
At line 17655 ENDATA
Problem uct-subprob has 1973 rows, 2256 columns and 10147 elements
Coin0008I uct-subprob read with 0 errors
seconds was changed from 1e+100 to 180
Continuous objective value is 242 - 0.23 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 24 strengthened rows, 190 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 10 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 7 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 5 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 1 strengthened rows, 0 substitutions
Cgl0004I processed model has 1667 rows, 2004 columns (2004 integer (2004 of which binary)) and 9429 elements
Coin3009W Conflict graph built in 0.003 seconds, density: 0.072%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 207 integers unsatisfied sum - 55.0509
Cbc0038I Pass   1: suminf.    0.00000 (0) obj. 450 iterations 1142
Cbc0038I Solution found of 450
Cbc0038I Before mini branch and bound, 172 integers at bound fixed and 934 continuous
Cbc0038I Full problem 1667 rows 2004 columns, reduced to 1191 rows 703 columns - 6 fixed gives 908, 527 - ok now
Cbc0038I Full problem 1667 rows 2004 columns, reduced to 858 rows 500 columns
Cbc0038I Mini branch and bound improved solution from 450 to 345 (2.47 seconds)
Cbc0038I Round again with cutoff of 333.8
Cbc0038I Pass   2: suminf.   11.08998 (27) obj. 333.8 iterations 1380
Cbc0038I Pass   3: suminf.    9.04998 (20) obj. 333.8 iterations 378
Cbc0038I Pass   4: suminf.    8.69471 (28) obj. 333.8 iterations 288
Cbc0038I Pass   5: suminf.    8.64997 (28) obj. 333.8 iterations 137
Cbc0038I Pass   6: suminf.    8.64997 (28) obj. 333.8 iterations 52
Cbc0038I Pass   7: suminf.    8.63998 (20) obj. 333.8 iterations 322
Cbc0038I Pass   8: suminf.    7.06664 (16) obj. 333.8 iterations 334
Cbc0038I Pass   9: suminf.    7.06664 (16) obj. 333.8 iterations 61
Cbc0038I Pass  10: suminf.    5.73330 (12) obj. 333.8 iterations 73
Cbc0038I Pass  11: suminf.    5.73330 (12) obj. 333.8 iterations 58
Cbc0038I Pass  12: suminf.   29.43428 (82) obj. 333.8 iterations 886
Cbc0038I Pass  13: suminf.   11.42498 (24) obj. 333.8 iterations 907
Cbc0038I Pass  14: suminf.    8.23330 (18) obj. 333.8 iterations 343
Cbc0038I Pass  15: suminf.    7.89997 (18) obj. 333.8 iterations 109
Cbc0038I Pass  16: suminf.    7.89997 (18) obj. 333.8 iterations 64
Cbc0038I Pass  17: suminf.    7.89997 (18) obj. 333.8 iterations 95
Cbc0038I Pass  18: suminf.    7.46150 (21) obj. 333.8 iterations 208
Cbc0038I Pass  19: suminf.    7.46150 (21) obj. 333.8 iterations 47
Cbc0038I Pass  20: suminf.    7.23197 (19) obj. 333.8 iterations 36
Cbc0038I Pass  21: suminf.    8.31330 (22) obj. 333.8 iterations 373
Cbc0038I Pass  22: suminf.    7.41330 (21) obj. 333.8 iterations 132
Cbc0038I Pass  23: suminf.    7.41330 (21) obj. 333.8 iterations 95
Cbc0038I Pass  24: suminf.    7.41330 (21) obj. 333.8 iterations 29
Cbc0038I Pass  25: suminf.    7.41330 (21) obj. 333.8 iterations 35
Cbc0038I Pass  26: suminf.   28.51192 (80) obj. 333.8 iterations 1305
Cbc0038I Pass  27: suminf.   13.72978 (46) obj. 333.8 iterations 646
Cbc0038I Pass  28: suminf.   10.49997 (42) obj. 333.8 iterations 517
Cbc0038I Pass  29: suminf.   10.03886 (25) obj. 333.8 iterations 117
Cbc0038I Pass  30: suminf.   10.03886 (25) obj. 333.8 iterations 34
Cbc0038I Pass  31: suminf.   27.96903 (80) obj. 333.8 iterations 1150
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 97 integers at bound fixed and 822 continuous
Cbc0038I Full problem 1667 rows 2004 columns, reduced to 1448 rows 1002 columns - 16 fixed gives 859, 536 - ok now
Cbc0038I Mini branch and bound did not improve solution (5.99 seconds)
Cbc0038I After 5.99 seconds - Feasibility pump exiting with objective of 345 - took 5.17 seconds
Cbc0012I Integer solution of 345 found by feasibility pump after 0 iterations and 0 nodes (5.99 seconds)
Cbc0031I 125 added rows had average density of 114.856
Cbc0013I At root node, 125 cuts changed objective from 242 to 271.64908 in 31 passes
Cbc0014I Cut generator 0 (Probing) - 146 row cuts average 2.0 elements, 0 column cuts (38 active)  in 0.361 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 658 row cuts average 550.5 elements, 0 column cuts (0 active)  in 11.827 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 2 row cuts average 4.0 elements, 0 column cuts (0 active)  in 118.237 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 137 row cuts average 4.6 elements, 0 column cuts (0 active)  in 0.817 seconds - new frequency is 1
Cbc0014I Cut generator 4 (OddWheel) - 2 row cuts average 5.5 elements, 0 column cuts (0 active)  in 3.740 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 2 row cuts average 34.5 elements, 0 column cuts (0 active)  in 1.209 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.012 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 417 row cuts average 155.6 elements, 0 column cuts (0 active)  in 4.310 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 119 row cuts average 7.6 elements, 0 column cuts (0 active)  in 6.915 seconds - new frequency is 1
Cbc0010I After 0 nodes, 1 on tree, 345 best solution, best possible 271.64908 (169.13 seconds)
Cbc0010I After 1 nodes, 2 on tree, 345 best solution, best possible 271.64908 (173.56 seconds)
Cbc0010I After 2 nodes, 3 on tree, 345 best solution, best possible 271.64908 (177.80 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 345 (best possible 271.64908), took 26716 iterations and 3 nodes (180.24 seconds)
Cbc0032I Strong branching done 38 times (2214 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 2, 0 variables fixed on reduced cost
Cuts at root node changed objective from 242 to 271.649
Probing was tried 43 times and created 147 cuts of which 38 were active after adding rounds of cuts (0.413 seconds)
Gomory was tried 43 times and created 663 cuts of which 0 were active after adding rounds of cuts (12.298 seconds)
Knapsack was tried 31 times and created 2 cuts of which 0 were active after adding rounds of cuts (118.237 seconds)
Clique was tried 43 times and created 181 cuts of which 0 were active after adding rounds of cuts (1.143 seconds)
OddWheel was tried 31 times and created 2 cuts of which 0 were active after adding rounds of cuts (3.740 seconds)
MixedIntegerRounding2 was tried 31 times and created 2 cuts of which 0 were active after adding rounds of cuts (1.209 seconds)
FlowCover was tried 31 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.012 seconds)
TwoMirCuts was tried 43 times and created 552 cuts of which 0 were active after adding rounds of cuts (5.840 seconds)
ZeroHalf was tried 43 times and created 147 cuts of which 0 were active after adding rounds of cuts (9.691 seconds)
ImplicationCuts was tried 11 times and created 31 cuts of which 0 were active after adding rounds of cuts (0.009 seconds)

Result - Stopped on time limit

Objective value:                345.00000000
Lower bound:                    271.649
Gap:                            0.27
Enumerated nodes:               3
Total iterations:               26716
Time (CPU seconds):             180.36
Time (Wallclock seconds):       188.57

Total time (CPU seconds):       180.39   (Wallclock seconds):       188.60

