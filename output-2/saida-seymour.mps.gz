Welcome to the CBC MILP Solver 
Version: devel 
Build Date: Sep 21 2020 

command line - ./cbc input/seymour.mps.gz sec 180 solve (default strategy 1)
At line 1 NAME           seymour
At line 2 ROWS
At line 4948 COLUMNS
At line 22724 RHS
At line 25197 BOUNDS
At line 26570 ENDATA
Problem seymour has 4944 rows, 1372 columns and 33549 elements
Coin0008I seymour read with 0 errors
seconds was changed from 1e+100 to 180
Continuous objective value is 403.846 - 2.65 seconds
Cgl0003I 0 fixed, 0 tightened bounds, 344 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 18 strengthened rows, 0 substitutions
Cgl0003I 0 fixed, 0 tightened bounds, 15 strengthened rows, 0 substitutions
Cgl0004I processed model has 4779 rows, 1153 columns (1153 integer (1105 of which binary)) and 33337 elements
Coin3009W Conflict graph built in 0.002 seconds, density: 0.052%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 586 integers unsatisfied sum - 178.123
Cbc0038I Pass   1: (4.45 seconds) suminf.   56.01620 (167) obj. 426.822 iterations 1267
Cbc0038I Pass   2: (4.54 seconds) suminf.   40.37500 (94) obj. 429.875 iterations 295
Cbc0038I Pass   3: (4.57 seconds) suminf.   33.00000 (66) obj. 430 iterations 103
Cbc0038I Pass   4: (4.59 seconds) suminf.   33.00000 (66) obj. 430 iterations 28
Cbc0038I Pass   5: (4.62 seconds) suminf.   11.00000 (22) obj. 438 iterations 66
Cbc0038I Pass   6: (4.65 seconds) suminf.   11.00000 (22) obj. 438 iterations 60
Cbc0038I Solution found of 448.5
Cbc0038I Branch and bound needed to clear up 1 general integers
Cbc0038I Full problem 4779 rows 1153 columns, reduced to 5 rows 5 columns
Cbc0038I Cleaned solution of 448
Cbc0038I Rounding solution of 436 is better than previous of 448

Cbc0038I Before mini branch and bound, 524 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 4779 rows 1153 columns, reduced to 4205 rows 627 columns - 70 fixed gives 1997, 541 - ok now
Cbc0038I Full problem 4779 rows 1153 columns, reduced to 1997 rows 541 columns
Cbc0038I Mini branch and bound improved solution from 436 to 431 (14.31 seconds)
Cbc0038I Round again with cutoff of 427.603
Cbc0038I Pass   7: (14.33 seconds) suminf.   56.01620 (167) obj. 426.822 iterations 0
Cbc0038I Pass   8: (14.51 seconds) suminf.   41.85327 (120) obj. 427.603 iterations 539
Cbc0038I Pass   9: (14.86 seconds) suminf.   28.22233 (83) obj. 427.603 iterations 686
Cbc0038I Pass  10: (14.94 seconds) suminf.   22.11064 (58) obj. 427.603 iterations 125
Cbc0038I Pass  11: (15.18 seconds) suminf.   20.44138 (51) obj. 427.603 iterations 397
Cbc0038I Pass  12: (15.21 seconds) suminf.   19.44138 (47) obj. 427.603 iterations 19
Cbc0038I Pass  13: (15.38 seconds) suminf.   17.23564 (44) obj. 427.603 iterations 262
Cbc0038I Pass  14: (15.49 seconds) suminf.   17.23564 (44) obj. 427.603 iterations 138
Cbc0038I Pass  15: (15.56 seconds) suminf.   17.23564 (44) obj. 427.603 iterations 88
Cbc0038I Pass  16: (15.63 seconds) suminf.   14.98564 (41) obj. 427.603 iterations 87
Cbc0038I Pass  17: (16.04 seconds) suminf.   11.02472 (26) obj. 427.603 iterations 630
Cbc0038I Pass  18: (16.08 seconds) suminf.   10.02472 (24) obj. 427.603 iterations 34
Cbc0038I Pass  19: (16.15 seconds) suminf.   10.02472 (24) obj. 427.603 iterations 70
Cbc0038I Pass  20: (16.28 seconds) suminf.   10.02472 (24) obj. 427.603 iterations 153
Cbc0038I Pass  21: (16.86 seconds) suminf.   31.99689 (176) obj. 427.603 iterations 1058
Cbc0038I Pass  22: (17.26 seconds) suminf.   13.80862 (47) obj. 427.603 iterations 776
Cbc0038I Pass  23: (17.48 seconds) suminf.   13.73900 (44) obj. 427.603 iterations 344
Cbc0038I Pass  24: (17.53 seconds) suminf.   11.66007 (39) obj. 427.603 iterations 64
Cbc0038I Pass  25: (17.69 seconds) suminf.   10.76954 (27) obj. 427.603 iterations 212
Cbc0038I Pass  26: (17.82 seconds) suminf.   10.76954 (27) obj. 427.603 iterations 156
Cbc0038I Pass  27: (17.96 seconds) suminf.    7.69138 (20) obj. 427.603 iterations 175
Cbc0038I Pass  28: (18.05 seconds) suminf.    7.69138 (20) obj. 427.603 iterations 101
Cbc0038I Pass  29: (18.57 seconds) suminf.    8.19138 (21) obj. 427.603 iterations 827
Cbc0038I Pass  30: (18.68 seconds) suminf.    7.73046 (21) obj. 427.603 iterations 123
Cbc0038I Pass  31: (18.80 seconds) suminf.    7.73046 (23) obj. 427.603 iterations 137
Cbc0038I Pass  32: (18.84 seconds) suminf.    7.73046 (23) obj. 427.603 iterations 44
Cbc0038I Pass  33: (19.39 seconds) suminf.   35.12395 (159) obj. 427.603 iterations 1009
Cbc0038I Pass  34: (20.14 seconds) suminf.   14.19138 (30) obj. 427.603 iterations 1251
Cbc0038I Pass  35: (20.29 seconds) suminf.    9.85805 (30) obj. 427.603 iterations 208
Cbc0038I Pass  36: (20.37 seconds) suminf.    6.52472 (17) obj. 427.603 iterations 103
Cbc0038I Rounding solution of 428 is better than previous of 431

Cbc0038I Before mini branch and bound, 443 integers at bound fixed and 0 continuous of which 2 were internal integer and 0 internal continuous
Cbc0038I Full problem 4779 rows 1153 columns, reduced to 4324 rows 704 columns - 212 fixed gives 155, 169 - ok now
Cbc0038I Mini branch and bound did not improve solution (20.96 seconds)
Cbc0038I Round again with cutoff of 422.806
Cbc0038I Pass  36: (21.16 seconds) suminf.   61.88049 (196) obj. 422.806 iterations 358
Cbc0038I Pass  37: (21.41 seconds) suminf.   50.32000 (161) obj. 422.806 iterations 556
Cbc0038I Pass  38: (21.57 seconds) suminf.   47.38862 (185) obj. 422.806 iterations 319
Cbc0038I Pass  39: (21.69 seconds) suminf.   45.52427 (187) obj. 422.806 iterations 192
Cbc0038I Pass  40: (21.79 seconds) suminf.   44.08350 (183) obj. 422.806 iterations 160
Cbc0038I Pass  41: (21.86 seconds) suminf.   43.59869 (167) obj. 422.806 iterations 91
Cbc0038I Pass  42: (21.88 seconds) suminf.   43.59869 (167) obj. 422.806 iterations 1
Cbc0038I Pass  43: (21.92 seconds) suminf.   40.54403 (166) obj. 422.806 iterations 52
Cbc0038I Pass  44: (22.03 seconds) suminf.   39.84505 (163) obj. 422.806 iterations 152
Cbc0038I Pass  45: (22.13 seconds) suminf.   37.20992 (184) obj. 422.806 iterations 146
Cbc0038I Pass  46: (22.29 seconds) suminf.   32.74281 (163) obj. 422.806 iterations 243
Cbc0038I Pass  47: (22.50 seconds) suminf.   31.40515 (250) obj. 422.806 iterations 306
Cbc0038I Pass  48: (22.60 seconds) suminf.   29.58948 (245) obj. 422.806 iterations 127
Cbc0038I Pass  49: (22.73 seconds) suminf.   28.68860 (248) obj. 422.806 iterations 195
Cbc0038I Pass  50: (22.79 seconds) suminf.   28.51551 (256) obj. 422.806 iterations 84
Cbc0038I Pass  51: (22.84 seconds) suminf.   27.51978 (254) obj. 422.806 iterations 52
Cbc0038I Pass  52: (22.86 seconds) suminf.   27.51978 (254) obj. 422.806 iterations 11
Cbc0038I Pass  53: (22.95 seconds) suminf.   24.53574 (245) obj. 422.806 iterations 119
Cbc0038I Pass  54: (22.97 seconds) suminf.   24.53574 (245) obj. 422.806 iterations 11
Cbc0038I Pass  55: (22.99 seconds) suminf.   24.53574 (245) obj. 422.806 iterations 4
Cbc0038I Pass  56: (23.01 seconds) suminf.   24.53574 (245) obj. 422.806 iterations 6
Cbc0038I Pass  57: (23.60 seconds) suminf.   53.88985 (225) obj. 422.806 iterations 1114
Cbc0038I Pass  58: (24.32 seconds) suminf.   24.60533 (58) obj. 422.806 iterations 1313
Cbc0038I Pass  59: (24.75 seconds) suminf.   24.06429 (262) obj. 422.806 iterations 644
Cbc0038I Pass  60: (24.80 seconds) suminf.   24.06210 (253) obj. 422.806 iterations 47
Cbc0038I Pass  61: (24.83 seconds) suminf.   24.06202 (252) obj. 422.806 iterations 12
Cbc0038I Pass  62: (24.85 seconds) suminf.   24.06202 (252) obj. 422.806 iterations 3
Cbc0038I Pass  63: (24.91 seconds) suminf.   23.07248 (253) obj. 422.806 iterations 77
Cbc0038I Pass  64: (24.94 seconds) suminf.   23.07249 (253) obj. 422.806 iterations 22
Cbc0038I Pass  65: (24.97 seconds) suminf.   23.07249 (253) obj. 422.806 iterations 15
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 445 integers at bound fixed and 0 continuous of which 3 were internal integer and 0 internal continuous
Cbc0038I Full problem 4779 rows 1153 columns, reduced to 4385 rows 702 columns - 208 fixed gives 157, 170 - ok now
Cbc0038I Mini branch and bound did not improve solution (25.56 seconds)
Cbc0038I After 25.56 seconds - Feasibility pump exiting with objective of 428 - took 21.68 seconds
Cbc0012I Integer solution of 428 found by feasibility pump after 0 iterations and 0 nodes (25.57 seconds)
Cbc0038I Full problem 4779 rows 1153 columns, reduced to 4211 rows 621 columns - 158 fixed gives 479, 338 - ok now
Cbc0038I Full problem 4779 rows 1153 columns, reduced to 479 rows 338 columns
Cbc0012I Integer solution of 427 found by RINS after 0 iterations and 0 nodes (30.57 seconds)
Cbc0031I 65 added rows had average density of 360.6
Cbc0013I At root node, 65 cuts changed objective from 406.02782 to 410.22132 in 18 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.135 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 361 row cuts average 776.3 elements, 0 column cuts (0 active)  in 9.300 seconds - new frequency is 1
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 122.736 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.034 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.140 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 1.780 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.137 seconds - new frequency is -100
Cbc0014I Cut generator 7 (TwoMirCuts) - 45 row cuts average 67.6 elements, 0 column cuts (0 active)  in 1.151 seconds - new frequency is 1
Cbc0014I Cut generator 8 (ZeroHalf) - 92 row cuts average 19.9 elements, 0 column cuts (0 active)  in 3.450 seconds - new frequency is 1
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 427 (best possible 410.22132), took 12161 iterations and 0 nodes (181.60 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from 406.028 to 410.221
Probing was tried 18 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.135 seconds)
Gomory was tried 18 times and created 361 cuts of which 0 were active after adding rounds of cuts (9.300 seconds)
Knapsack was tried 18 times and created 0 cuts of which 0 were active after adding rounds of cuts (122.736 seconds)
Clique was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.034 seconds)
OddWheel was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.140 seconds)
MixedIntegerRounding2 was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (1.780 seconds)
FlowCover was tried 17 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.137 seconds)
TwoMirCuts was tried 17 times and created 45 cuts of which 0 were active after adding rounds of cuts (1.151 seconds)
ZeroHalf was tried 17 times and created 92 cuts of which 0 were active after adding rounds of cuts (3.450 seconds)

Result - Stopped on time limit

Objective value:                427.00000000
Lower bound:                    410.221
Gap:                            0.04
Enumerated nodes:               0
Total iterations:               12161
Time (CPU seconds):             182.16
Time (Wallclock seconds):       222.87

Total time (CPU seconds):       182.19   (Wallclock seconds):       222.90

