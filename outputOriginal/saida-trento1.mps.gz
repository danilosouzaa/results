Welcome to the CBC MILP Solver 
Version: devel 
Build Date: Sep 25 2020 

command line - ./cbc input/trento1.mps.gz sec 180 solve (default strategy 1)
At line 1 NAME          trento1
At line 2 ROWS
At line 1269 COLUMNS
At line 102530 RHS
At line 103791 BOUNDS
At line 110207 ENDATA
Problem trento1 has 1265 rows, 7687 columns and 93571 elements
Coin0008I trento1 read with 0 errors
seconds was changed from 1e+100 to 180
Continuous objective value is 5.18276e+06 - 11.08 seconds
Cgl0004I processed model has 1264 rows, 7678 columns (6415 integer (6415 of which binary)) and 93396 elements
Coin3009W Conflict graph built in 0.007 seconds, density: 0.005%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cbc0038I Initial state - 472 integers unsatisfied sum - 72.7708
Cbc0038I Pass   1: suminf.    8.50000 (17) obj. 2.32121e+07 iterations 17060
Cbc0038I Pass   2: suminf.    0.00000 (0) obj. 1.38298e+08 iterations 18093
Cbc0038I Solution found of 1.38298e+08
Cbc0038I Relaxing continuous gives 1.38298e+08
Cbc0038I Before mini branch and bound, 5925 integers at bound fixed and 1225 continuous
Cbc0038I Full problem 1264 rows 7678 columns, reduced to 357 rows 384 columns
Cbc0038I Mini branch and bound improved solution from 1.38298e+08 to 2.6405e+07 (49.48 seconds)
Cbc0038I Round again with cutoff of 2.42827e+07
Cbc0038I Pass   3: suminf.    8.50000 (17) obj. 2.32121e+07 iterations 0
Cbc0038I Pass   4: suminf.    4.22699 (13) obj. 2.42827e+07 iterations 6307
Cbc0038I Pass   5: suminf.    4.22455 (1569) obj. 2.42827e+07 iterations 11576
Cbc0038I Pass   6: suminf.    1.13677 (7) obj. 2.42827e+07 iterations 3019
Cbc0038I Pass   7: suminf.    1.11551 (13) obj. 2.42827e+07 iterations 1127
Cbc0038I Pass   8: suminf.    2.38467 (10) obj. 2.42827e+07 iterations 1576
Cbc0038I Pass   9: suminf.    1.13333 (10) obj. 2.42827e+07 iterations 518
Cbc0038I Pass  10: suminf.    0.88301 (9) obj. 2.42827e+07 iterations 1429
Cbc0038I Pass  11: suminf.    1.95709 (17) obj. 2.42827e+07 iterations 2551
Cbc0038I Pass  12: suminf.    0.65027 (9) obj. 2.42827e+07 iterations 2303
Cbc0038I Pass  13: suminf.    2.51628 (15) obj. 2.42827e+07 iterations 2381
Cbc0038I Pass  14: suminf.    2.51628 (15) obj. 2.42827e+07 iterations 569
Cbc0038I Pass  15: suminf.    1.52126 (7) obj. 2.42827e+07 iterations 1301
Cbc0038I Pass  16: suminf.    0.49024 (3) obj. 2.42827e+07 iterations 1899
Cbc0038I Pass  17: suminf.    0.00000 (0) obj. 1.60562e+07 iterations 1130
Cbc0038I Solution found of 1.60562e+07
Cbc0038I Relaxing continuous gives 1.60562e+07
Cbc0038I Before mini branch and bound, 4077 integers at bound fixed and 419 continuous
Cbc0038I Full problem 1264 rows 7678 columns, reduced to 1162 rows 3106 columns - 149 fixed gives 252, 458 - ok now
Cbc0038I Full problem 1264 rows 7678 columns, reduced to 107 rows 170 columns
Cbc0038I Mini branch and bound improved solution from 1.60562e+07 to 1.55152e+07 (92.90 seconds)
Cbc0038I Round again with cutoff of 1.34487e+07
Cbc0038I Pass  18: suminf.   15.91485 (60) obj. 1.34487e+07 iterations 1536
Cbc0038I Pass  19: suminf.    4.24777 (18) obj. 1.34487e+07 iterations 5002
Cbc0038I Pass  20: suminf.    4.07700 (26) obj. 1.34487e+07 iterations 1162
Cbc0038I Pass  21: suminf.    3.80700 (28) obj. 1.34487e+07 iterations 874
Cbc0038I Pass  22: suminf.    3.20540 (379) obj. 1.34487e+07 iterations 3722
Cbc0038I Pass  23: suminf.    2.90666 (18) obj. 1.34487e+07 iterations 748
Cbc0038I Pass  24: suminf.    4.28463 (25) obj. 1.34487e+07 iterations 3828
Cbc0038I Pass  25: suminf.    3.32168 (10) obj. 1.34487e+07 iterations 75
Cbc0038I Pass  26: suminf.    2.66992 (8) obj. 1.34487e+07 iterations 88
Cbc0038I Pass  27: suminf.    1.34689 (4) obj. 1.34487e+07 iterations 802
Cbc0038I Pass  28: suminf.    1.32531 (4) obj. 1.34487e+07 iterations 634
Cbc0038I Pass  29: suminf.    1.08569 (3) obj. 1.34487e+07 iterations 652
Cbc0038I Pass  30: suminf.    1.08569 (3) obj. 1.34487e+07 iterations 0
Cbc0038I Pass  31: suminf.    1.34082 (4) obj. 1.34487e+07 iterations 515
Cbc0038I Pass  32: suminf.    5.07332 (1060) obj. 1.34487e+07 iterations 5394
Cbc0038I Pass  33: suminf.    1.34082 (4) obj. 1.34487e+07 iterations 1097
Cbc0038I Pass  34: suminf.    5.97052 (23) obj. 1.34487e+07 iterations 1153
Cbc0038I Pass  35: suminf.    1.47875 (3) obj. 1.34487e+07 iterations 1374
Cbc0038I Pass  36: suminf.    1.36177 (4) obj. 1.34487e+07 iterations 306
Cbc0038I Pass  37: suminf.    1.48020 (3) obj. 1.34487e+07 iterations 209
Cbc0038I Pass  38: suminf.    1.48020 (3) obj. 1.34487e+07 iterations 0
Cbc0038I Pass  39: suminf.    6.32187 (16) obj. 1.34487e+07 iterations 1104
Cbc0038I Pass  40: suminf.    2.04208 (6) obj. 1.34487e+07 iterations 1019
Cbc0038I Pass  41: suminf.    2.01355 (6) obj. 1.34487e+07 iterations 738
Cbc0038I Pass  42: suminf.    1.97829 (7) obj. 1.34487e+07 iterations 888
Cbc0038I Pass  43: suminf.    1.36059 (4) obj. 1.34487e+07 iterations 26
Cbc0038I Pass  44: suminf.    1.17542 (3) obj. 1.34487e+07 iterations 514
Cbc0038I Pass  45: suminf.    1.17542 (3) obj. 1.34487e+07 iterations 0
Cbc0038I Pass  46: suminf.    1.37530 (4) obj. 1.34487e+07 iterations 461
Cbc0038I Pass  47: suminf.    2.55747 (449) obj. 1.34487e+07 iterations 2133
Cbc0038I No solution found this major pass
Cbc0038I Before mini branch and bound, 4169 integers at bound fixed and 324 continuous
Cbc0038I Full problem 1264 rows 7678 columns, reduced to 1176 rows 3172 columns - 152 fixed gives 380, 693 - ok now
Cbc0038I Mini branch and bound did not improve solution (131.24 seconds)
Cbc0038I After 131.24 seconds - Feasibility pump exiting with objective of 1.55152e+07 - took 119.23 seconds
Cbc0012I Integer solution of 15515213 found by feasibility pump after 0 iterations and 0 nodes (131.24 seconds)
Cbc0038I Full problem 1264 rows 7678 columns, reduced to 1069 rows 1555 columns
Cbc0012I Integer solution of 15414584 found by RINS after 0 iterations and 0 nodes (142.25 seconds)
Cbc0013I At root node, 0 cuts changed objective from 5182758.8 to 5182758.8 in 1 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)  in 9.081 seconds - new frequency is 1
Cbc0014I Cut generator 1 (Gomory) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.201 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.042 seconds - new frequency is -100
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.000 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.271 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.056 seconds - new frequency is -100
Cbc0010I After 0 nodes, 1 on tree, 15414584 best solution, best possible 5182758.8 (155.38 seconds)
Cbc0010I After 1 nodes, 2 on tree, 15414584 best solution, best possible 5182758.8 (159.34 seconds)
Cbc0010I After 2 nodes, 3 on tree, 15414584 best solution, best possible 5182758.8 (162.80 seconds)
Cbc0010I After 3 nodes, 4 on tree, 15414584 best solution, best possible 5182758.8 (166.30 seconds)
Cbc0010I After 4 nodes, 5 on tree, 15414584 best solution, best possible 5182758.8 (170.00 seconds)
Cbc0010I After 5 nodes, 6 on tree, 15414584 best solution, best possible 5182758.8 (173.58 seconds)
Cbc0010I After 6 nodes, 7 on tree, 15414584 best solution, best possible 5182758.8 (176.49 seconds)
Cbc0010I After 7 nodes, 8 on tree, 15414584 best solution, best possible 5182758.8 (178.77 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 15414584 (best possible 5182758.8), took 3010 iterations and 8 nodes (180.83 seconds)
Cbc0032I Strong branching done 86 times (2114 iterations), fathomed 0 nodes and fixed 0 variables
Cbc0035I Maximum depth 8, 0 variables fixed on reduced cost
Cuts at root node changed objective from 5.18276e+06 to 5.18276e+06
Probing was tried 7 times and created 1 cuts of which 0 were active after adding rounds of cuts (9.733 seconds)
Gomory was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.201 seconds)
Knapsack was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.042 seconds)
Clique was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
OddWheel was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)
MixedIntegerRounding2 was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.271 seconds)
FlowCover was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.056 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.302 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.000 seconds)

Result - Stopped on time limit

Objective value:                15414584.00000000
Lower bound:                    5182758.848
Gap:                            1.97
Enumerated nodes:               8
Total iterations:               3010
Time (CPU seconds):             181.49
Time (Wallclock seconds):       181.75

Total time (CPU seconds):       181.58   (Wallclock seconds):       181.84

