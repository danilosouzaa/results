Welcome to the CBC MILP Solver 
Version: devel 
Build Date: Sep 21 2020 

command line - ./cbc input/cvs16r128-89.mps.gz sec 180 solve (default strategy 1)
At line 2 NAME          cvs16r128-89
At line 3 ROWS
At line 4638 COLUMNS
At line 19217 RHS
At line 19323 BOUNDS
At line 22796 ENDATA
Problem cvs16r128-89 has 4633 rows, 3472 columns and 12528 elements
Coin0008I cvs16r128-89 read with 0 errors
seconds was changed from 1e+100 to 180
Continuous objective value is -128 - 3.34 seconds
Cgl0004I processed model has 4633 rows, 3472 columns (3472 integer (3472 of which binary)) and 12528 elements
Coin3009W Conflict graph built in 0.007 seconds, density: 0.077%
Cgl0015I Clique Strengthening extended 0 cliques, 0 were dominated
Cutoff increment increased from 0.0001 to 0.9999
Cbc0038I Initial state - 3210 integers unsatisfied sum - 214
Cbc0038I Solution found of -2
Cbc0038I Before mini branch and bound, 262 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4633 rows 3472 columns, reduced to 4318 rows 3210 columns - too large
Cbc0038I Mini branch and bound did not improve solution (3.95 seconds)
Cbc0038I Round again with cutoff of -15.4999
Cbc0038I Pass   1: (5.06 seconds) suminf.    0.75014 (3) obj. -15.4999 iterations 2728
Cbc0038I Solution found of -16
Cbc0038I Before mini branch and bound, 262 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4633 rows 3472 columns, reduced to 4318 rows 3210 columns - 6 fixed gives 3776, 2877 - still too large
Cbc0038I Mini branch and bound did not improve solution (5.10 seconds)
Cbc0038I Round again with cutoff of -39.1999
Cbc0038I Pass   2: (5.54 seconds) suminf.   19.30273 (54) obj. -39.1999 iterations 1235
Cbc0038I Pass   3: (5.88 seconds) suminf.    0.34986 (7) obj. -39.1999 iterations 1195
Cbc0038I Pass   4: (5.91 seconds) suminf.    0.34986 (7) obj. -39.1999 iterations 15
Cbc0038I Solution found of -43
Cbc0038I Before mini branch and bound, 257 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4633 rows 3472 columns, reduced to 4320 rows 3213 columns - 20 fixed gives 3616, 2773 - still too large
Cbc0038I Mini branch and bound did not improve solution (5.95 seconds)
Cbc0038I Round again with cutoff of -69.1999
Cbc0038I Pass   5: (6.17 seconds) suminf.   73.98043 (702) obj. -69.1999 iterations 306
Cbc0038I Pass   6: (7.31 seconds) suminf.   51.72418 (313) obj. -69.1999 iterations 3431
Cbc0038I Pass   7: (7.42 seconds) suminf.   49.39986 (247) obj. -69.1999 iterations 242
Cbc0038I Pass   8: (7.45 seconds) suminf.   49.39986 (247) obj. -69.1999 iterations 1
Cbc0038I Pass   9: (7.53 seconds) suminf.   47.30602 (216) obj. -69.1999 iterations 205
Cbc0038I Pass  10: (8.11 seconds) suminf.   20.19958 (63) obj. -69.1999 iterations 1549
Cbc0038I Pass  11: (8.71 seconds) suminf.   17.67259 (40) obj. -69.1999 iterations 1508
Cbc0038I Pass  12: (9.06 seconds) suminf.    0.99965 (12) obj. -69.1999 iterations 800
Cbc0038I Pass  13: (9.17 seconds) suminf.    0.49982 (5) obj. -69.1999 iterations 172
Cbc0038I Solution found of -71
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4633 rows 3472 columns, reduced to 4600 rows 3424 columns - 12 fixed gives 4147, 3157 - still too large
Cbc0038I Mini branch and bound did not improve solution (9.21 seconds)
Cbc0038I Round again with cutoff of -88.7999
Cbc0038I Pass  14: (9.30 seconds) suminf.  135.84326 (1862) obj. -88.7999 iterations 86
Cbc0038I Pass  15: (10.41 seconds) suminf.   70.67923 (713) obj. -88.7999 iterations 3003
Cbc0038I Pass  16: (10.75 seconds) suminf.   65.07005 (478) obj. -88.7999 iterations 937
Cbc0038I Pass  17: (10.92 seconds) suminf.   61.61160 (459) obj. -88.7999 iterations 416
Cbc0038I Pass  18: (11.16 seconds) suminf.   44.95739 (191) obj. -88.7999 iterations 670
Cbc0038I Pass  19: (11.26 seconds) suminf.   40.49982 (171) obj. -88.7999 iterations 240
Cbc0038I Pass  20: (11.47 seconds) suminf.   28.58060 (140) obj. -88.7999 iterations 458
Cbc0038I Pass  21: (11.75 seconds) suminf.   26.36457 (132) obj. -88.7999 iterations 980
Cbc0038I Pass  22: (12.40 seconds) suminf.   15.29988 (58) obj. -88.7999 iterations 1573
Cbc0038I Pass  23: (12.63 seconds) suminf.    7.50140 (30) obj. -88.7999 iterations 599
Cbc0038I Solution found of -89
Cbc0038I Before mini branch and bound, 48 integers at bound fixed and 0 continuous
Cbc0038I Full problem 4633 rows 3472 columns, reduced to 4600 rows 3424 columns - 12 fixed gives 4147, 3157 - still too large
Cbc0038I Mini branch and bound did not improve solution (12.67 seconds)
Cbc0038I Round again with cutoff of -105.2
Cbc0038I Pass  24: (12.73 seconds) suminf.  174.33113 (2301) obj. -105.2 iterations 43
Cbc0038I Pass  25: (13.10 seconds) suminf.  159.61219 (1947) obj. -105.2 iterations 714
Cbc0038I Pass  26: (13.87 seconds) suminf.  152.46553 (1765) obj. -105.2 iterations 1511
Cbc0038I Pass  27: (14.32 seconds) suminf.  148.67027 (1803) obj. -105.2 iterations 943
Cbc0038I Pass  28: (14.90 seconds) suminf.  149.25833 (1595) obj. -105.2 iterations 1243
Cbc0038I Pass  29: (15.70 seconds) suminf.  145.72557 (1773) obj. -105.2 iterations 1841
Cbc0038I Pass  30: (16.09 seconds) suminf.  140.67115 (1575) obj. -105.2 iterations 843
Cbc0038I Pass  31: (16.35 seconds) suminf.  138.20182 (1639) obj. -105.2 iterations 554
Cbc0038I Pass  32: (17.05 seconds) suminf.  130.02525 (1250) obj. -105.2 iterations 1448
Cbc0038I Pass  33: (17.39 seconds) suminf.  123.02335 (1502) obj. -105.2 iterations 767
Cbc0038I Pass  34: (17.84 seconds) suminf.  119.10998 (1360) obj. -105.2 iterations 899
Cbc0038I Pass  35: (18.14 seconds) suminf.  114.65659 (1359) obj. -105.2 iterations 571
Cbc0038I Pass  36: (18.37 seconds) suminf.  110.96126 (1230) obj. -105.2 iterations 427
Cbc0038I Pass  37: (18.53 seconds) suminf.  110.66647 (1216) obj. -105.2 iterations 280
Cbc0038I Pass  38: (19.03 seconds) suminf.  109.63797 (1325) obj. -105.2 iterations 913
Cbc0038I Pass  39: (19.27 seconds) suminf.  109.63797 (1325) obj. -105.2 iterations 334
Cbc0038I Pass  40: (19.72 seconds) suminf.  109.63797 (1325) obj. -105.2 iterations 671
Cbc0038I Pass  41: (20.48 seconds) suminf.  125.04792 (1550) obj. -105.2 iterations 1286
Cbc0038I Pass  42: (21.25 seconds) suminf.  109.47072 (1347) obj. -105.2 iterations 1254
Cbc0038I Pass  43: (21.31 seconds) suminf.  109.46112 (1364) obj. -105.2 iterations 58
Cbc0038I Pass  44: (21.63 seconds) suminf.  108.41752 (1198) obj. -105.2 iterations 619
Cbc0038I Pass  45: (21.80 seconds) suminf.  108.36464 (1315) obj. -105.2 iterations 225
Cbc0038I Pass  46: (21.86 seconds) suminf.  108.36132 (1310) obj. -105.2 iterations 59
Cbc0038I Pass  47: (22.44 seconds) suminf.  115.30055 (1114) obj. -105.2 iterations 1037
Cbc0038I Pass  48: (23.06 seconds) suminf.  108.36132 (1310) obj. -105.2 iterations 1023
Cbc0038I Pass  49: (23.18 seconds) suminf.  108.36132 (1310) obj. -105.2 iterations 150
Cbc0038I Pass  50: (23.76 seconds) suminf.  117.55313 (1211) obj. -105.2 iterations 1013
Cbc0038I No solution found this major pass
Cbc0038I After 23.76 seconds - Feasibility pump exiting with objective of -89 - took 20.14 seconds
Cbc0012I Integer solution of -89 found by feasibility pump after 0 iterations and 0 nodes (23.76 seconds)
Cbc0031I 196 added rows had average density of 120.40816
Cbc0013I At root node, 196 cuts changed objective from -128 to -114.5057 in 7 passes
Cbc0014I Cut generator 0 (Probing) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.170 seconds - new frequency is -100
Cbc0014I Cut generator 1 (Gomory) - 17 row cuts average 201.9 elements, 0 column cuts (0 active)  in 6.464 seconds - new frequency is -100
Cbc0014I Cut generator 2 (Knapsack) - 833 row cuts average 120.3 elements, 0 column cuts (0 active)  in 79.260 seconds - new frequency is 1
Cbc0014I Cut generator 3 (Clique) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 6.541 seconds - new frequency is -100
Cbc0014I Cut generator 4 (OddWheel) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 40.964 seconds - new frequency is -100
Cbc0014I Cut generator 5 (MixedIntegerRounding2) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.049 seconds - new frequency is -100
Cbc0014I Cut generator 6 (FlowCover) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)  in 0.004 seconds - new frequency is -100
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective -89 (best possible -114.5057), took 9518 iterations and 0 nodes (181.73 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost
Cuts at root node changed objective from -128 to -114.506
Probing was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.170 seconds)
Gomory was tried 7 times and created 17 cuts of which 0 were active after adding rounds of cuts (6.464 seconds)
Knapsack was tried 7 times and created 833 cuts of which 0 were active after adding rounds of cuts (79.260 seconds)
Clique was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (6.541 seconds)
OddWheel was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (40.964 seconds)
MixedIntegerRounding2 was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.049 seconds)
FlowCover was tried 7 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.004 seconds)
TwoMirCuts was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (0.788 seconds)
ZeroHalf was tried 1 times and created 0 cuts of which 0 were active after adding rounds of cuts (3.086 seconds)

Result - Stopped on time limit

Objective value:                -89.00000000
Lower bound:                    -114.506
Gap:                            0.22
Enumerated nodes:               0
Total iterations:               9518
Time (CPU seconds):             182.55
Time (Wallclock seconds):       182.76

Total time (CPU seconds):       182.58   (Wallclock seconds):       182.78

